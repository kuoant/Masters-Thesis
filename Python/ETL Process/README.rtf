{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ###### How to install:\
\
1) Download Docker from docs.docker.com/get-docker, open it and let it run in the background.\
\
2) Open a terminal and run the following commands:\
\
	$ cd \'84/path/to/ETL Process\'93\
	$ docker-compose up\
\
This might take a few minutes.\
\
3) In Docker, you can now find the ETL Process. Click on the blue localhost \'848080:8080\'93.\
\
4) You should now be able to access the directory \'84notebooks\'93 and run iPython Notebook.\
\
5) For future access you may start Docker, turn on ETL Process and start the blue localhost \'848080:8080\'93, which will automatically guide you to Jupyter Notebooks and access the directory \'84notebooks\'93 and lets you correspond with the databases.\
\
\
######\'a0Explanation:\
\
\'84Docker-compose up\'93 starts three services: a PostgreSQL database (db), a Jupyter notebook server (jupyter) and a database management UI (adminer). The PostgreSQL container uses a custom script \'84install.sh\'93 to initialize the database and sets the password to \'84example\'93. The Jupyter container builds from your local Dockerfile, mounts your \'84./notebooks/\'93 directory so you can edit and run notebooks and exposes port 8888. The Adminer container gives you a simple web interface to explore your database at \'84http:localhost:8080\'93. So this setup runs isolatedservices that communicate with each other, useful for data science and database development.}